[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CNU Deep Learning",
    "section": "",
    "text": "0.1 Welcome",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Home</span>"
    ]
  },
  {
    "objectID": "cnu_introduction.html",
    "href": "cnu_introduction.html",
    "title": "2  Introduction",
    "section": "",
    "text": "2.0.1 chatGPT",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "cnu_introduction.html#google-colab",
    "href": "cnu_introduction.html#google-colab",
    "title": "2  Introduction",
    "section": "2.1 Google Colab",
    "text": "2.1 Google Colab\n\n2.1.0.1 User\nI’ll learn these using google colab. can you let me know how to setup the colab environment for this learning\n\n\n2.1.0.2 ChatGPT\nCertainly! Google Colab is an excellent platform for learning and running Python code, especially for bioinformatics. It provides a cloud-based Jupyter notebook environment that comes pre-configured with many scientific libraries. Here’s how to set up and use Google Colab for learning bioinformatics with Python:\n\n\n2.1.1 Step-by-Step Guide to Setting Up Google Colab\n\n2.1.1.1 1. Access Google Colab\n\nGo to Google Colab in your web browser.\nSign in with your Google account.\n\n\n\n2.1.1.2 2. Create a New Notebook\n\nClick on File -&gt; New Notebook to create a new notebook.\n\n\n\n2.1.1.3 3. Install Required Libraries\nGoogle Colab comes with many libraries pre-installed, but you might need to install some additional ones, such as biopython and scikit-bio. You can do this using the !pip install command directly in a cell.\n\n!pip install biopython scikit-bio\n\nCollecting biopython\n  Using cached biopython-1.83-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.1 MB)\nCollecting scikit-bio\n  Using cached scikit_bio-0.6.0-cp310-cp310-linux_x86_64.whl\nRequirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from biopython) (1.25.2)\nRequirement already satisfied: requests&gt;=2.20.0 in /usr/local/lib/python3.10/dist-packages (from scikit-bio) (2.31.0)\nRequirement already satisfied: decorator&gt;=3.4.2 in /usr/local/lib/python3.10/dist-packages (from scikit-bio) (4.4.2)\nRequirement already satisfied: natsort&gt;=4.0.3 in /usr/local/lib/python3.10/dist-packages (from scikit-bio) (8.4.0)\nRequirement already satisfied: pandas&gt;=1.5.0 in /usr/local/lib/python3.10/dist-packages (from scikit-bio) (2.0.3)\nRequirement already satisfied: scipy&gt;=1.9.0 in /usr/local/lib/python3.10/dist-packages (from scikit-bio) (1.11.4)\nRequirement already satisfied: h5py&gt;=3.6.0 in /usr/local/lib/python3.10/dist-packages (from scikit-bio) (3.9.0)\nCollecting hdmedians&gt;=0.14.1 (from scikit-bio)\n  Using cached hdmedians-0.14.2.tar.gz (7.6 kB)\n  Installing build dependencies ... done\n  Getting requirements to build wheel ... done\n  Installing backend dependencies ... done\n  Preparing metadata (pyproject.toml) ... done\nCollecting biom-format (from scikit-bio)\n  Using cached biom-format-2.1.16.tar.gz (11.7 MB)\n  Installing build dependencies ... done\n  Getting requirements to build wheel ... done\n  Preparing metadata (pyproject.toml) ... done\nRequirement already satisfied: Cython&gt;=0.23 in /usr/local/lib/python3.10/dist-packages (from hdmedians&gt;=0.14.1-&gt;scikit-bio) (3.0.10)\nRequirement already satisfied: python-dateutil&gt;=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas&gt;=1.5.0-&gt;scikit-bio) (2.8.2)\nRequirement already satisfied: pytz&gt;=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas&gt;=1.5.0-&gt;scikit-bio) (2023.4)\nRequirement already satisfied: tzdata&gt;=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas&gt;=1.5.0-&gt;scikit-bio) (2024.1)\nRequirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /usr/local/lib/python3.10/dist-packages (from requests&gt;=2.20.0-&gt;scikit-bio) (3.3.2)\nRequirement already satisfied: idna&lt;4,&gt;=2.5 in /usr/local/lib/python3.10/dist-packages (from requests&gt;=2.20.0-&gt;scikit-bio) (3.7)\nRequirement already satisfied: urllib3&lt;3,&gt;=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests&gt;=2.20.0-&gt;scikit-bio) (2.0.7)\nRequirement already satisfied: certifi&gt;=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests&gt;=2.20.0-&gt;scikit-bio) (2024.2.2)\nRequirement already satisfied: click in /usr/local/lib/python3.10/dist-packages (from biom-format-&gt;scikit-bio) (8.1.7)\nRequirement already satisfied: six&gt;=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil&gt;=2.8.2-&gt;pandas&gt;=1.5.0-&gt;scikit-bio) (1.16.0)\nBuilding wheels for collected packages: hdmedians, biom-format\n  Building wheel for hdmedians (pyproject.toml) ... done\n  Created wheel for hdmedians: filename=hdmedians-0.14.2-cp310-cp310-linux_x86_64.whl size=677344 sha256=bdb59a5a7f3c50595338eddb9ba2543154a22768d26ebef426620812d70b7ac5\n  Stored in directory: /root/.cache/pip/wheels/82/8f/0d/0c61130cfad119482ebb95aecf8d5dfaddd0181f5680da2bec\n  Building wheel for biom-format (pyproject.toml) ... done\n  Created wheel for biom-format: filename=biom_format-2.1.16-cp310-cp310-linux_x86_64.whl size=12163349 sha256=d12440641a1d66f7dacf66cc4ac6389f129345dcb6f49f158641670e2fa9afdc\n  Stored in directory: /root/.cache/pip/wheels/8e/a9/f9/197fd5a0e5bbab5f2e03c89194f6c194bed7af5d7a8c8759f3\nSuccessfully built hdmedians biom-format\nInstalling collected packages: hdmedians, biopython, biom-format, scikit-bio\nSuccessfully installed biom-format-2.1.16 biopython-1.83 hdmedians-0.14.2 scikit-bio-0.6.0\n\n\n\n\n2.1.1.4 4. Import Libraries and Verify Installation\nIn a new code cell, import the libraries to ensure they are installed correctly.\n\n# Importing necessary libraries\nimport Bio\nimport skbio\n\nprint(\"Biopython version:\", Bio.__version__)\nprint(\"scikit-bio version:\", skbio.__version__)\n\nModuleNotFoundError: No module named 'Bio'\n\n\n\n\n2.1.1.5 5. Upload Files to Colab\n\n구글 드라이브에 2024-cnu-lecture 폴더를 만들기\n공유된 파일 2024-cnu-lecture 폴더에 복사후 open\n분석을 위한 ganbank 파일 ncbi에서 다운로드\n구글 드라이브의 위 디렉토리에 genbank 파일 복사 또는 다음 코드로 로컬 파일을 업로드 가능\n\n\n!pwd\n\n/content\n\n\n\nimport os\nos.chdir('drive/MyDrive/2024-cnu-lecture')\n\n\n!pwd\n\n/content/drive/MyDrive/2024-cnu-lecture\n\n\n\nfrom google.colab import files\n\nuploaded = files.upload()\n\n# Listing the uploaded files\nfor filename in uploaded.keys():\n    print(filename)\n\n\n     \n     \n      Upload widget is only available when the cell has been executed in the\n      current browser session. Please rerun this cell to enable.\n      \n       \n\n\n\n\n\nimage.png\n\n\n\n\n2.1.1.6 6. Example: Reading a GenBank File and Analyzing Sequences\nHere’s an example workflow that reads a GenBank file, performs sequence analysis with Biopython, and aligns sequences with scikit-bio:\nUpload your GenBank file first, and then use the following code:\n\nfrom Bio import SeqIO\nfrom Bio.Seq import Seq\nfrom skbio import Protein\nfrom skbio.alignment import global_pairwise_align_protein\n\n# Assuming the uploaded GenBank file is named 'example.gb'\ngenbank_file = 'egfp.gb'\n\n# Read a protein sequence from a GenBank file\nrecord = SeqIO.read(genbank_file, \"genbank\")\nprint(len(record.seq))\n\nprotein_seq = record.seq.translate()\nprint(protein_seq)\n\n# Perform alignment with another protein sequence\nseq1 = Protein(str(protein_seq))\nseq2 = Protein(\"MKVLYNLKDG\")\n\nalignment, score, start_end_positions = global_pairwise_align_protein(seq1, seq2)\n\nprint(\"Alignment:\\n\", alignment)\nprint(\"Score:\", score)\nprint(\"Start-End Positions:\", start_end_positions)\n\n1150\nMSRVSKGEELFTGVVPILVELDGDVNGHKFSVSGEGEGDATYGKLTLKFICTTGKLPVPWPTLVTTLTYGVQCFSRYPDHMKQHDFFKSAMPEGYVQEVDLCILLS*EVELFPFCVLQLQMEIHRDTRGFCLVLSFVLVVN*KFIHLQEINSLLFKSKGLTYVSVKHWIPKNSKMR*GIFNLVWTSNRLG*PPVKLQQDCLLTQCLRSDVQ*LVLFHFALDFLFANELCF*WFSLFWCVENHLLQGRRQLQDPRRGEVRGRHPGEPHRAEGHRLQGGRQHPGAQAGVQLQQPQRLYHGRQAEERHQGELQDPPQHRGRQRAARRPLPAEHPHRRRPRAAARQPLPEHPVRPEQRPQREARSHGPAGVRDRRRDHSRHGRAVQV\nAlignment:\n TabularMSA[Protein]\n-----------------------------------------------------------------------\nStats:\n    sequence count: 2\n    position count: 384\n-----------------------------------------------------------------------\nMSRVSKGEELFTGVVPILVEL-DGDVNGHKFSV ... PEQRPQREARSHGPAGVRDRRRDHSRHGRAVQV\n--------------MKVLYNLKDG--------- ... ---------------------------------\nScore: 18.0\nStart-End Positions: [(0, 382), (0, 9)]\n\n\n/usr/local/lib/python3.10/dist-packages/Bio/Seq.py:2880: BiopythonWarning: Partial codon, len(sequence) not a multiple of three. Explicitly trim the sequence or add trailing N before translation. This may become an error in future.\n  warnings.warn(\n/usr/local/lib/python3.10/dist-packages/skbio/alignment/_pairwise.py:538: EfficiencyWarning: You're using skbio's python implementation of Needleman-Wunsch alignment. This is known to be very slow (e.g., thousands of times slower than a native C implementation). We'll be adding a faster version soon (see https://github.com/scikit-bio/scikit-bio/issues/254 to track progress on this).\n  warn(\n\n\n\n\n\n2.1.2 7. Saving Your Work\nYou can save your notebook to Google Drive:\n\nClick on File -&gt; Save a copy in Drive.\n\n\n\n2.1.3 8. Sharing Your Notebook\nYou can share your notebook with others by clicking on the Share button in the top right corner and setting the appropriate sharing permissions.\n\n\n2.1.4 Example Colab Notebook\nHere’s a more comprehensive example notebook that includes reading files, sequence analysis, and visualization:\n# Example data for visualization\ndata = {\n    'Sequence': ['Seq1', 'Seq2', 'Seq3'],\n    'GC_Content': [50, 55, 45],\n    'Length': [20, 22, 18]\n}\n\n# Visualize using Seaborn\ndf = pd.DataFrame(data)\nsns.histplot(df['GC_Content'], kde=True)\nplt.title('GC Content Distribution')\nplt.xlabel('GC Content (%)')\nplt.show()\n\nsns.boxplot(x=df['Length'])\nplt.title('Sequence Length Distribution')\nplt.xlabel('Length (bp)')\nplt.show()\nThis notebook covers: - Installing and importing bioinformatics libraries. - Uploading and reading files. - Performing sequence analysis. - Visualizing data.\nBy following these steps and examples, you’ll be well-prepared to use Google Colab for your bioinformatics learning and research.\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\n# Example data for visualization\ndata = {\n    'Sequence': ['Seq1', 'Seq2', 'Seq3'],\n    'GC_Content': [50, 55, 45],\n    'Length': [20, 22, 18]\n}\n\n# Visualize using Seaborn\ndf = pd.DataFrame(data)\nsns.histplot(df['GC_Content'], kde=True)\nplt.title('GC Content Distribution')\nplt.xlabel('GC Content (%)')\nplt.show()\n\nsns.boxplot(x=df['Length'])\nplt.title('Sequence Length Distribution')\nplt.xlabel('Length (bp)')\nplt.show()",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction</span>"
    ]
  }
]